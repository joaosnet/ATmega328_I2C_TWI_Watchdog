
watchdogtime.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000044a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000044a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000047c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b25  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007c1  00000000  00000000  00001069  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000641  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00001e6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000447  00000000  00000000  00001f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000241  00000000  00000000  000023d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002614  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <main>
  78:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  80:	82 e6       	ldi	r24, 0x62	; 98
  82:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  86:	84 e0       	ldi	r24, 0x04	; 4
  88:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  8c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  90:	08 95       	ret

00000092 <i2c_start>:
  92:	84 ea       	ldi	r24, 0xA4	; 164
  94:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  98:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  9c:	88 23       	and	r24, r24
  9e:	e4 f7       	brge	.-8      	; 0x98 <i2c_start+0x6>
  a0:	08 95       	ret

000000a2 <i2c_write>:
  a2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  a6:	84 e8       	ldi	r24, 0x84	; 132
  a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ac:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b0:	88 23       	and	r24, r24
  b2:	e4 f7       	brge	.-8      	; 0xac <i2c_write+0xa>
  b4:	08 95       	ret

000000b6 <delay>:
  b6:	40 e0       	ldi	r20, 0x00	; 0
  b8:	50 e0       	ldi	r21, 0x00	; 0
  ba:	0a c0       	rjmp	.+20     	; 0xd0 <delay+0x1a>
  bc:	2f 5f       	subi	r18, 0xFF	; 255
  be:	3f 4f       	sbci	r19, 0xFF	; 255
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <delay+0x10>
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	29 37       	cpi	r18, 0x79	; 121
  c8:	31 05       	cpc	r19, r1
  ca:	c4 f3       	brlt	.-16     	; 0xbc <delay+0x6>
  cc:	4f 5f       	subi	r20, 0xFF	; 255
  ce:	5f 4f       	sbci	r21, 0xFF	; 255
  d0:	84 17       	cp	r24, r20
  d2:	95 07       	cpc	r25, r21
  d4:	b4 f7       	brge	.-20     	; 0xc2 <delay+0xc>
  d6:	08 95       	ret

000000d8 <toggle>:
  d8:	eb eb       	ldi	r30, 0xBB	; 187
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	80 83       	st	Z, r24
  e2:	84 e8       	ldi	r24, 0x84	; 132
  e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ec:	88 23       	and	r24, r24
  ee:	e4 f7       	brge	.-8      	; 0xe8 <toggle+0x10>
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 5b 00 	call	0xb6	; 0xb6 <delay>
  f8:	eb eb       	ldi	r30, 0xBB	; 187
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	8d 7f       	andi	r24, 0xFD	; 253
 100:	80 83       	st	Z, r24
 102:	84 e8       	ldi	r24, 0x84	; 132
 104:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 108:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 10c:	88 23       	and	r24, r24
 10e:	e4 f7       	brge	.-8      	; 0x108 <toggle+0x30>
 110:	08 95       	ret

00000112 <lcd_cmd_hf>:
 112:	eb eb       	ldi	r30, 0xBB	; 187
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	90 81       	ld	r25, Z
 118:	9e 7f       	andi	r25, 0xFE	; 254
 11a:	90 83       	st	Z, r25
 11c:	94 e8       	ldi	r25, 0x84	; 132
 11e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 122:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 126:	99 23       	and	r25, r25
 128:	e4 f7       	brge	.-8      	; 0x122 <lcd_cmd_hf+0x10>
 12a:	eb eb       	ldi	r30, 0xBB	; 187
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	90 81       	ld	r25, Z
 130:	9f 70       	andi	r25, 0x0F	; 15
 132:	90 83       	st	Z, r25
 134:	94 e8       	ldi	r25, 0x84	; 132
 136:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 13a:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 13e:	99 23       	and	r25, r25
 140:	e4 f7       	brge	.-8      	; 0x13a <lcd_cmd_hf+0x28>
 142:	eb eb       	ldi	r30, 0xBB	; 187
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	90 81       	ld	r25, Z
 148:	80 7f       	andi	r24, 0xF0	; 240
 14a:	89 2b       	or	r24, r25
 14c:	80 83       	st	Z, r24
 14e:	84 e8       	ldi	r24, 0x84	; 132
 150:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 154:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 158:	88 23       	and	r24, r24
 15a:	e4 f7       	brge	.-8      	; 0x154 <lcd_cmd_hf+0x42>
 15c:	0e 94 6c 00 	call	0xd8	; 0xd8 <toggle>
 160:	08 95       	ret

00000162 <lcd_cmd>:
 162:	cf 93       	push	r28
 164:	c8 2f       	mov	r28, r24
 166:	eb eb       	ldi	r30, 0xBB	; 187
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	8e 7f       	andi	r24, 0xFE	; 254
 16e:	80 83       	st	Z, r24
 170:	84 e8       	ldi	r24, 0x84	; 132
 172:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 176:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	88 23       	and	r24, r24
 17c:	e4 f7       	brge	.-8      	; 0x176 <lcd_cmd+0x14>
 17e:	eb eb       	ldi	r30, 0xBB	; 187
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	8f 70       	andi	r24, 0x0F	; 15
 186:	80 83       	st	Z, r24
 188:	84 e8       	ldi	r24, 0x84	; 132
 18a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 18e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 192:	88 23       	and	r24, r24
 194:	e4 f7       	brge	.-8      	; 0x18e <lcd_cmd+0x2c>
 196:	eb eb       	ldi	r30, 0xBB	; 187
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	9c 2f       	mov	r25, r28
 19e:	90 7f       	andi	r25, 0xF0	; 240
 1a0:	89 2b       	or	r24, r25
 1a2:	80 83       	st	Z, r24
 1a4:	84 e8       	ldi	r24, 0x84	; 132
 1a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1aa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ae:	88 23       	and	r24, r24
 1b0:	e4 f7       	brge	.-8      	; 0x1aa <lcd_cmd+0x48>
 1b2:	0e 94 6c 00 	call	0xd8	; 0xd8 <toggle>
 1b6:	eb eb       	ldi	r30, 0xBB	; 187
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	8f 70       	andi	r24, 0x0F	; 15
 1be:	80 83       	st	Z, r24
 1c0:	84 e8       	ldi	r24, 0x84	; 132
 1c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ca:	88 23       	and	r24, r24
 1cc:	e4 f7       	brge	.-8      	; 0x1c6 <lcd_cmd+0x64>
 1ce:	eb eb       	ldi	r30, 0xBB	; 187
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	20 81       	ld	r18, Z
 1d4:	30 e1       	ldi	r19, 0x10	; 16
 1d6:	c3 9f       	mul	r28, r19
 1d8:	c0 01       	movw	r24, r0
 1da:	11 24       	eor	r1, r1
 1dc:	82 2b       	or	r24, r18
 1de:	80 83       	st	Z, r24
 1e0:	84 e8       	ldi	r24, 0x84	; 132
 1e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1e6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ea:	88 23       	and	r24, r24
 1ec:	e4 f7       	brge	.-8      	; 0x1e6 <lcd_cmd+0x84>
 1ee:	0e 94 6c 00 	call	0xd8	; 0xd8 <toggle>
 1f2:	cf 91       	pop	r28
 1f4:	08 95       	ret

000001f6 <lcd_init>:
 1f6:	80 e3       	ldi	r24, 0x30	; 48
 1f8:	0e 94 89 00 	call	0x112	; 0x112 <lcd_cmd_hf>
 1fc:	80 e3       	ldi	r24, 0x30	; 48
 1fe:	0e 94 89 00 	call	0x112	; 0x112 <lcd_cmd_hf>
 202:	80 e2       	ldi	r24, 0x20	; 32
 204:	0e 94 89 00 	call	0x112	; 0x112 <lcd_cmd_hf>
 208:	88 e2       	ldi	r24, 0x28	; 40
 20a:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
 20e:	8c e0       	ldi	r24, 0x0C	; 12
 210:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
 21a:	86 e0       	ldi	r24, 0x06	; 6
 21c:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
 220:	80 e8       	ldi	r24, 0x80	; 128
 222:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
 226:	08 95       	ret

00000228 <lcd_dwr>:
 228:	cf 93       	push	r28
 22a:	c8 2f       	mov	r28, r24
 22c:	eb eb       	ldi	r30, 0xBB	; 187
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	81 60       	ori	r24, 0x01	; 1
 234:	80 83       	st	Z, r24
 236:	84 e8       	ldi	r24, 0x84	; 132
 238:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 23c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 240:	88 23       	and	r24, r24
 242:	e4 f7       	brge	.-8      	; 0x23c <lcd_dwr+0x14>
 244:	eb eb       	ldi	r30, 0xBB	; 187
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	8f 70       	andi	r24, 0x0F	; 15
 24c:	80 83       	st	Z, r24
 24e:	84 e8       	ldi	r24, 0x84	; 132
 250:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 254:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 258:	88 23       	and	r24, r24
 25a:	e4 f7       	brge	.-8      	; 0x254 <lcd_dwr+0x2c>
 25c:	eb eb       	ldi	r30, 0xBB	; 187
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	9c 2f       	mov	r25, r28
 264:	90 7f       	andi	r25, 0xF0	; 240
 266:	89 2b       	or	r24, r25
 268:	80 83       	st	Z, r24
 26a:	84 e8       	ldi	r24, 0x84	; 132
 26c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 270:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 274:	88 23       	and	r24, r24
 276:	e4 f7       	brge	.-8      	; 0x270 <lcd_dwr+0x48>
 278:	0e 94 6c 00 	call	0xd8	; 0xd8 <toggle>
 27c:	eb eb       	ldi	r30, 0xBB	; 187
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	8f 70       	andi	r24, 0x0F	; 15
 284:	80 83       	st	Z, r24
 286:	84 e8       	ldi	r24, 0x84	; 132
 288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 28c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 290:	88 23       	and	r24, r24
 292:	e4 f7       	brge	.-8      	; 0x28c <lcd_dwr+0x64>
 294:	eb eb       	ldi	r30, 0xBB	; 187
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	20 81       	ld	r18, Z
 29a:	30 e1       	ldi	r19, 0x10	; 16
 29c:	c3 9f       	mul	r28, r19
 29e:	c0 01       	movw	r24, r0
 2a0:	11 24       	eor	r1, r1
 2a2:	82 2b       	or	r24, r18
 2a4:	80 83       	st	Z, r24
 2a6:	84 e8       	ldi	r24, 0x84	; 132
 2a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2ac:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b0:	88 23       	and	r24, r24
 2b2:	e4 f7       	brge	.-8      	; 0x2ac <lcd_dwr+0x84>
 2b4:	0e 94 6c 00 	call	0xd8	; 0xd8 <toggle>
 2b8:	cf 91       	pop	r28
 2ba:	08 95       	ret

000002bc <lcd_msg>:
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	ec 01       	movw	r28, r24
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <lcd_msg+0xe>
 2c4:	21 96       	adiw	r28, 0x01	; 1
 2c6:	0e 94 14 01 	call	0x228	; 0x228 <lcd_dwr>
 2ca:	88 81       	ld	r24, Y
 2cc:	81 11       	cpse	r24, r1
 2ce:	fa cf       	rjmp	.-12     	; 0x2c4 <lcd_msg+0x8>
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	08 95       	ret

000002d6 <main>:
#include <avr/interrupt.h>
#include "i2c.h"
#include "LCD_I2c.h"

int main(void)
{
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	00 d0       	rcall	.+0      	; 0x2dc <main+0x6>
 2dc:	1f 92       	push	r1
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
	i2c_init();
 2e2:	0e 94 40 00 	call	0x80	; 0x80 <i2c_init>
	i2c_start();
 2e6:	0e 94 49 00 	call	0x92	; 0x92 <i2c_start>
	i2c_write(0x70);
 2ea:	80 e7       	ldi	r24, 0x70	; 112
 2ec:	0e 94 51 00 	call	0xa2	; 0xa2 <i2c_write>
	lcd_init();
 2f0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_init>

	cli();
 2f4:	f8 94       	cli
	MCUSR &= ~(1 << WDRF);
 2f6:	84 b7       	in	r24, 0x34	; 52
 2f8:	87 7f       	andi	r24, 0xF7	; 247
 2fa:	84 bf       	out	0x34, r24	; 52
	WDTCSR = 0x00;
 2fc:	e0 e6       	ldi	r30, 0x60	; 96
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	10 82       	st	Z, r1
	WDTCSR = (1<<WDCE)|(1<<WDE);
 302:	88 e1       	ldi	r24, 0x18	; 24
 304:	80 83       	st	Z, r24
	WDTCSR = (1<<WDIE)|(1<<WDE)|(1<<WDP3);
 306:	88 e6       	ldi	r24, 0x68	; 104
 308:	80 83       	st	Z, r24
	sei();
 30a:	78 94       	sei

	DDRB &=~ 0b11111110;
 30c:	84 b1       	in	r24, 0x04	; 4
 30e:	81 70       	andi	r24, 0x01	; 1
 310:	84 b9       	out	0x04, r24	; 4
	int contdr = 0;
 312:	00 e0       	ldi	r16, 0x00	; 0
 314:	10 e0       	ldi	r17, 0x00	; 0

	while(1)
	{
		PORTB = 0x01;
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	85 b9       	out	0x05, r24	; 5
		PORTB = (1<<PORTC0);
 31a:	85 b9       	out	0x05, r24	; 5

		char buffer[3];
		itoa(contdr, buffer, 10); // Convertendo o contador para string
 31c:	4a e0       	ldi	r20, 0x0A	; 10
 31e:	50 e0       	ldi	r21, 0x00	; 0
 320:	be 01       	movw	r22, r28
 322:	6f 5f       	subi	r22, 0xFF	; 255
 324:	7f 4f       	sbci	r23, 0xFF	; 255
 326:	c8 01       	movw	r24, r16
 328:	0e 94 b9 01 	call	0x372	; 0x372 <itoa>

		lcd_cmd(0x80);
 32c:	80 e8       	ldi	r24, 0x80	; 128
 32e:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_cmd>
		lcd_msg(buffer);
 332:	ce 01       	movw	r24, r28
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33a:	2f ef       	ldi	r18, 0xFF	; 255
 33c:	80 e7       	ldi	r24, 0x70	; 112
 33e:	92 e0       	ldi	r25, 0x02	; 2
 340:	21 50       	subi	r18, 0x01	; 1
 342:	80 40       	sbci	r24, 0x00	; 0
 344:	90 40       	sbci	r25, 0x00	; 0
 346:	e1 f7       	brne	.-8      	; 0x340 <main+0x6a>
 348:	00 c0       	rjmp	.+0      	; 0x34a <main+0x74>
 34a:	00 00       	nop

		_delay_ms(100);
		if ((PINB & (1<<PORTB0))==1){
 34c:	18 9b       	sbis	0x03, 0	; 3
 34e:	e3 cf       	rjmp	.-58     	; 0x316 <main+0x40>
			contdr++;
 350:	0f 5f       	subi	r16, 0xFF	; 255
 352:	1f 4f       	sbci	r17, 0xFF	; 255
			WDTCSR |= (1<<WDIE);
 354:	e0 e6       	ldi	r30, 0x60	; 96
 356:	f0 e0       	ldi	r31, 0x00	; 0
 358:	80 81       	ld	r24, Z
 35a:	80 64       	ori	r24, 0x40	; 64
 35c:	80 83       	st	Z, r24
 35e:	2f ef       	ldi	r18, 0xFF	; 255
 360:	80 e7       	ldi	r24, 0x70	; 112
 362:	92 e0       	ldi	r25, 0x02	; 2
 364:	21 50       	subi	r18, 0x01	; 1
 366:	80 40       	sbci	r24, 0x00	; 0
 368:	90 40       	sbci	r25, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x8e>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x98>
 36e:	00 00       	nop
			_delay_ms(100);
		}
	}
 370:	d2 cf       	rjmp	.-92     	; 0x316 <main+0x40>

00000372 <itoa>:
 372:	45 32       	cpi	r20, 0x25	; 37
 374:	51 05       	cpc	r21, r1
 376:	20 f4       	brcc	.+8      	; 0x380 <itoa+0xe>
 378:	42 30       	cpi	r20, 0x02	; 2
 37a:	10 f0       	brcs	.+4      	; 0x380 <itoa+0xe>
 37c:	0c 94 c4 01 	jmp	0x388	; 0x388 <__itoa_ncheck>
 380:	fb 01       	movw	r30, r22
 382:	10 82       	st	Z, r1
 384:	cb 01       	movw	r24, r22
 386:	08 95       	ret

00000388 <__itoa_ncheck>:
 388:	bb 27       	eor	r27, r27
 38a:	4a 30       	cpi	r20, 0x0A	; 10
 38c:	31 f4       	brne	.+12     	; 0x39a <__itoa_ncheck+0x12>
 38e:	99 23       	and	r25, r25
 390:	22 f4       	brpl	.+8      	; 0x39a <__itoa_ncheck+0x12>
 392:	bd e2       	ldi	r27, 0x2D	; 45
 394:	90 95       	com	r25
 396:	81 95       	neg	r24
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__utoa_common>

0000039e <__utoa_ncheck>:
 39e:	bb 27       	eor	r27, r27

000003a0 <__utoa_common>:
 3a0:	fb 01       	movw	r30, r22
 3a2:	55 27       	eor	r21, r21
 3a4:	aa 27       	eor	r26, r26
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	aa 1f       	adc	r26, r26
 3ac:	a4 17       	cp	r26, r20
 3ae:	10 f0       	brcs	.+4      	; 0x3b4 <__utoa_common+0x14>
 3b0:	a4 1b       	sub	r26, r20
 3b2:	83 95       	inc	r24
 3b4:	50 51       	subi	r21, 0x10	; 16
 3b6:	b9 f7       	brne	.-18     	; 0x3a6 <__utoa_common+0x6>
 3b8:	a0 5d       	subi	r26, 0xD0	; 208
 3ba:	aa 33       	cpi	r26, 0x3A	; 58
 3bc:	08 f0       	brcs	.+2      	; 0x3c0 <__utoa_common+0x20>
 3be:	a9 5d       	subi	r26, 0xD9	; 217
 3c0:	a1 93       	st	Z+, r26
 3c2:	00 97       	sbiw	r24, 0x00	; 0
 3c4:	79 f7       	brne	.-34     	; 0x3a4 <__utoa_common+0x4>
 3c6:	b1 11       	cpse	r27, r1
 3c8:	b1 93       	st	Z+, r27
 3ca:	11 92       	st	Z+, r1
 3cc:	cb 01       	movw	r24, r22
 3ce:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <strrev>

000003d2 <strrev>:
 3d2:	dc 01       	movw	r26, r24
 3d4:	fc 01       	movw	r30, r24
 3d6:	67 2f       	mov	r22, r23
 3d8:	71 91       	ld	r23, Z+
 3da:	77 23       	and	r23, r23
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <strrev+0x4>
 3de:	32 97       	sbiw	r30, 0x02	; 2
 3e0:	04 c0       	rjmp	.+8      	; 0x3ea <strrev+0x18>
 3e2:	7c 91       	ld	r23, X
 3e4:	6d 93       	st	X+, r22
 3e6:	70 83       	st	Z, r23
 3e8:	62 91       	ld	r22, -Z
 3ea:	ae 17       	cp	r26, r30
 3ec:	bf 07       	cpc	r27, r31
 3ee:	c8 f3       	brcs	.-14     	; 0x3e2 <strrev+0x10>
 3f0:	08 95       	ret

000003f2 <_exit>:
 3f2:	f8 94       	cli

000003f4 <__stop_program>:
 3f4:	ff cf       	rjmp	.-2      	; 0x3f4 <__stop_program>
